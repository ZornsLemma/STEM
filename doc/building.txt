This file contains some notes on how to build STEM from source; if you simply
want to use STEM and have a pre-built version (probably in a .zip file obtained
from the stardot thread mentioned in README.txt) you don't need to worry about
this.

The primary build mechanism is the Makefile in the src directory. This almost
certainly won't work with anything except GNU make, and probably only on a
Unix-like operating system; I used the Debian and Ubuntu Linux distributions
during development.

A simpler alternative is provided by the build.sh shell script in the src
directory; this will do more work than necessary for the build, but on modern
hardware it's still virtually instant. This will only work on Unix-like
systems, but it should be easy to translate the commands in it to build on
other operating systems such as Windows.

Python programs are used to generate some files as part of the build process,
so you'll need Python installed; a recent Python 2.x or 3.x should work,
although I used Python 2.7 during development.

You'll need a copy of the BeebAsm assembler. STEM depends on (and was the
motivation for developing) several new features and bugfixes and won't build
out of the box with BeebAsm 1.08, the latest official release. The best option
is to take the version from
https://github.com/ZornsLemma/beebasm/tree/my-proposed-updates and build using
that. It would probably be possible to modify the source to assemble with 1.08;
if you want to try this, I suggest deleting all the xassert_* macros and assert
commands and replacing the xbne_always, xbcc_always, ...  macros with bne,
bcc, ... (respectively) as a starting point.

The makefile and build.sh create the stem.ssd disc image. A convenience script
mkdist.sh is provided in the root of the repository to build stem.ssd and
bundle it up with associated files in a .zip file for distribution.
